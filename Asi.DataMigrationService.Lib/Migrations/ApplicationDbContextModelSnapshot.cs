// <auto-generated />
using Asi.DataMigrationService.Lib.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using System;

namespace Asi.DataMigrationService.Lib.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ImportMap", b =>
                {
                    b.Property<int>("ImportMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MapInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("ImportMapId");

                    b.HasIndex("TenantId", "Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ImportMaps");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.Project", b =>
                {
                    b.Property<string>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProjectInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.HasIndex("TenantId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectDataSource", b =>
                {
                    b.Property<int>("ProjectDataSourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProjectDataSourceId");

                    b.HasIndex("ProjectId", "DataSourceType", "Name")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.ToTable("ProjectDataSource");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectImport", b =>
                {
                    b.Property<int>("ProjectImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("ProjectDataSourceId")
                        .HasColumnType("int");

                    b.Property<string>("PropertyNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectImportId");

                    b.HasIndex("ProjectDataSourceId", "Name")
                        .IsUnique();

                    b.ToTable("ProjectImport");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectImportData", b =>
                {
                    b.Property<int>("ProjectImportDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectImportId")
                        .HasColumnType("int");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.HasKey("ProjectImportDataId");

                    b.HasIndex("ProjectImportId", "RowNumber")
                        .IsUnique();

                    b.ToTable("ProjectImportData");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectJob", b =>
                {
                    b.Property<int>("ProjectJobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("SubmittedBy")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("SubmittedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectJobId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectJob");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectJobMessage", b =>
                {
                    b.Property<int>("ProjectJobMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<string>("Processor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ProjectJobId")
                        .HasColumnType("int");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ProjectJobMessageId");

                    b.HasIndex("ProjectJobId");

                    b.ToTable("ProjectJobMessage");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.Tenant", b =>
                {
                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("TenantId");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.Project", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectDataSource", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.Project", "Project")
                        .WithMany("DataSources")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectImport", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.ProjectDataSource", "ProjectDataSource")
                        .WithMany("Imports")
                        .HasForeignKey("ProjectDataSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectImportData", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.ProjectImport", "ProjectImport")
                        .WithMany("Data")
                        .HasForeignKey("ProjectImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectJob", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.Project", "Project")
                        .WithMany("ProjectJobs")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Asi.DataMigrationService.Lib.Data.Models.ProjectJobMessage", b =>
                {
                    b.HasOne("Asi.DataMigrationService.Lib.Data.Models.ProjectJob", "ProjectJob")
                        .WithMany("ProjectJobMessages")
                        .HasForeignKey("ProjectJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
